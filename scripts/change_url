#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# RETRIEVE ARGUMENTS
#=================================================

#REMOVEME? old_domain=$YNH_APP_OLD_DOMAIN
#REMOVEME? old_path=$YNH_APP_OLD_PATH

#REMOVEME? new_domain=$YNH_APP_NEW_DOMAIN
#REMOVEME? new_path=$YNH_APP_NEW_PATH

#REMOVEME? app=$YNH_APP_INSTANCE_NAME

#=================================================
# LOAD SETTINGS
#=================================================
#REMOVEME? ynh_script_progression --message="Loading installation settings..."

#REMOVEME? # Needed for helper "ynh_add_nginx_config"
#REMOVEME? #REMOVEME? install_dir=$(ynh_app_setting_get --app=$app --key=install_dir)

# Add settings here as needed by your application
#REMOVEME? db_name=$(ynh_app_setting_get --app=$app --key=db_name)
#REMOVEME? db_user=$db_name
#REMOVEME? db_pwd=$(ynh_app_setting_get --app=$app --key=psqlpwd)
#REMOVEME? unicorn_workers=$(ynh_app_setting_get --app=$app --key=unicorn_workers)

#=================================================
# BACKUP BEFORE CHANGE URL THEN ACTIVE TRAP
#=================================================
#REMOVEME? ynh_script_progression --message="Backing up the app before changing its URL (may take a while)..."

# Backup the current version of the app
#REMOVEME? ynh_backup_before_upgrade
#REMOVEME? ynh_clean_setup () {
	#REMOVEME? ynh_clean_check_starting
	# Remove the new domain config file, the remove script won't do it as it doesn't know yet its location.
#REMOVEME? 	ynh_secure_remove --file="/etc/nginx/conf.d/$new_domain.d/$app.conf"

	# Restore it if the upgrade fails
#REMOVEME? 	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
#REMOVEME? ynh_abort_if_errors

#=================================================
# CHECK WHICH PARTS SHOULD BE CHANGED
#=================================================

#REMOVEME? change_domain=0
#REMOVEME? if [ "$old_domain" != "$new_domain" ]
then
	#REMOVEME? change_domain=1
fi

#REMOVEME? change_path=0
#REMOVEME? if [ "$old_path" != "$new_path" ]
then
	#REMOVEME? change_path=1
fi

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..."

ynh_systemd_action --service_name=$app --action="stop" --log_path="/var/log/$app/$app.log"

#=================================================
# MODIFY URL IN NGINX CONF
#=================================================
ynh_script_progression --message="Updating NGINX web server configuration..."

ynh_change_url_nginx_config

#REMOVEME? nginx_conf_path=/etc/nginx/conf.d/$old_domain.d/$app.conf

# Change the path in the NGINX config file
if [ $change_path -eq 1 ]
then
	# Make a backup of the original NGINX config file if modified
#REMOVEME? 	ynh_backup_if_checksum_is_different --file="$nginx_conf_path"
	# Set global variables for NGINX helper
#REMOVEME? 	domain="$old_domain"
#REMOVEME? 	path="$new_path"
	# Create a dedicated NGINX config
#REMOVEME? 	ynh_add_nginx_config
	# Reference: https://meta.discourse.org/t/subfolder-support-with-docker/30507?u=falco&source_topic_id=54191
	if [ "$path" != "/" ] ; then
#REMOVEME? 		ynh_replace_string --match_string='$proxy_add_x_forwarded_for' --replace_string='$http_your_original_ip_header' --target_file="/etc/nginx/conf.d/$domain.d/$app.conf"
	fi
#REMOVEME? 	ynh_store_file_checksum --file="/etc/nginx/conf.d/$domain.d/$app.conf"
fi

# Change the domain for NGINX
if [ $change_domain -eq 1 ]
then
	# Delete file checksum for the old conf file location
#REMOVEME? 	ynh_delete_file_checksum --file="$nginx_conf_path"
#REMOVEME? 	mv $nginx_conf_path /etc/nginx/conf.d/$new_domain.d/$app.conf
	# Store file checksum for the new config file location
#REMOVEME? 	ynh_store_file_checksum --file="/etc/nginx/conf.d/$new_domain.d/$app.conf"
fi

#=================================================
# SPECIFIC MODIFICATIONS
#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression --message="Updating a config file..."

discourse_config_file="$install_dir/config/discourse.conf"
# Configure hostname
ynh_replace_string --match_string="hostname = .*" --replace_string="hostname = \"$new_domain\"" --target_file="$discourse_config_file"
ynh_replace_string --match_string="relative_url_root = .*" --replace_string="relative_url_root = ${new_path%/}" --target_file="$discourse_config_file"
ynh_replace_string --match_string="smtp_domain = .*" --replace_string="smtp_domain = $new_domain" --target_file="$discourse_config_file"

# Calculate and store the config file checksum
ynh_store_file_checksum --file="$discourse_config_file"

# Change URL setting
ynh_psql_connect_as --user=$db_user --password=$db_pwd --database=$db_name <<< "UPDATE site_settings SET value = replace(value, '${old_path%/}/images/', '${new_path%/}/images/');
UPDATE site_settings SET value = '${new_path}' WHERE name='long_polling_base_url';"

ynh_use_ruby
# Remap URLs in forum posts
exec_login_as $app RAILS_ENV=production bin/bundle exec script/discourse remap ${old_path%/}/uploads ${new_path%/}/uploads <<< "YES
# "

# Regenerate assets
ynh_exec_warn_less exec_login_as $app RAILS_ENV=production bin/rake assets:precompile

# Regenerate all forum posts
ynh_exec_warn_less exec_login_as $app RAILS_ENV=production bin/rake posts:rebake

#=================================================
# GENERIC FINALISATION
#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..."

# Start a systemd service
ynh_systemd_action --service_name=$app --action="start" --log_path="$install_dir/log/unicorn.stderr.log" --line_match="INFO -- : worker=$((unicorn_workers-1)) ready"

#=================================================
# RELOAD NGINX
#=================================================
#REMOVEME? ynh_script_progression --message="Reloading NGINX web server..."

#REMOVEME? #REMOVEME? ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Change of URL completed for $app"
